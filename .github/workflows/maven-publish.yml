name: Deploy Spring Boot App to AWS EC2

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: |
          mvn clean package 

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}:${{ github.sha }} 
          # Use SHA for unique image tag

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: 'us-east-1' # Replace with your AWS region

      - name: Connect to EC2 instance
        uses: oreilly-infra/aws-ssh@v2
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: 'us-east-1'
          instance_ids: 'your_ec2_instance_id' 
          username: 'ec2-user'

      - name: Deploy application
        run: |
          ssh ec2-user@<your_ec2_instance_ip> 'docker pull ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}'
          ssh ec2-user@<your_ec2_instance_ip> 'docker stop my-app'
          ssh ec2-user@<your_ec2_instance_ip> 'docker rm my-app'
          ssh ec2-user@<your_ec2_instance_ip> 'docker run -d -p 8080:8080 --name my-app ${{ secrets.ECR_REGISTRY }}:${{ github.sha }}'
